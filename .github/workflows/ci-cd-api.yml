name: CI/CD production pipeline

on:
  push:
    branches: [main]
    paths:
      - "server/**"
      - ".github/workflows/**"

env:
  AWS_REGION: us-east-1
  DATAPORT: 8080
  FRONTEND_URL: https://brev-ly.uk

jobs:
  continuous-deployment-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # container
      - name: Install dependencies
        working-directory: ./server
        run: |
          pnpm install

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: set id commit sha
        id: generate-tag
        run: |
          echo "sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      # login no container registry do github
      - name: Login in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Configuração de cache do buildx
      - name: Set up Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3

      # Constrói e envia a imagem para o container registry
      - name: Build and push Docker Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./server # O contexto de construção do Docker ('.' significa o diretório atual)
          push: true # Se true, a imagem Docker será enviada para o registro
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.generate-tag.outputs.sha }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha # Habilita o cache de camadas do Docker para construções mais rápidas
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Verify Docker build
        run: |
          echo "✅ Docker image built successfully"
          docker images ghcr.io/${{ github.repository }}:${{ steps.generate-tag.outputs.sha }}
          echo "Image ID: ${{ steps.build.outputs.imageid }}"

      - name: Register task definition
        id: register-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/ecs/task-definition.json
          container-name: brev-ly-ecs-task-definition
          image: ghcr.io/${{ github.repository }}:latest

      - name: Deploy task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.register-task-definition.outputs.task-definition }}
          service: brev-ly-ecs-service
          cluster: brev-ly-ecs-cluster
          wait-for-service-stability: true
          wait-for-minutes: 10
          #7
